name: Refresh notas.json
on:
  schedule:
    - cron: '0 5 * * *'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  scrape:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      - run: npm ci || npm i

      - name: Run scraper
        env:
          PORTAL_USER: ${{ secrets.PORTAL_USER }}
          PORTAL_PASS: ${{ secrets.PORTAL_PASS }}
          LOGIN_URL:   ${{ secrets.LOGIN_URL }}
          NOTAS_URL:   ${{ secrets.NOTAS_URL }}
        run: node scraping.js
      - name: Upload debug LOGIN (si existe)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: debug-login
          path: debug_login.html
          if-no-files-found: ignore


      # --- A) Diff y estado del repo (debug)
      - name: Show repo state
        run: |
          echo "PWD=$(pwd)"
          ls -la
          git status
          echo "Changed files:"
          git diff --name-only || true

      # --- B) Muestra el contenido (primeras líneas)
      - name: Peek notas.json
        run: |
          [ -f notas.json ] || (echo "notas.json no existe en raíz" && exit 1)
          echo "Primeras 40 líneas de notas.json:"
          head -n 40 notas.json || true
          echo "Tamaño:"
          wc -c notas.json || true

      # --- C) Sube como artifact para inspección (opcional)
      - name: Upload notas.json (artifact)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: notas-json
          path: notas.json
          if-no-files-found: error
      - name: Upload debug HTML (si existe)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: debug-notas
          path: debug_notas.html
          if-no-files-found: ignore


      - name: Commit notas.json
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add notas.json
          git commit -m "chore: refresh notas.json [skip ci]" || echo "Sin cambios"
          git push
